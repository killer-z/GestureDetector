%!PS-Adobe-3.0 EPSF-3.0
% Produced by xpdf/pdftops 3.02
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Darwin 13.0.0 Darwin Kernel Version 13.0.0: Thu Sep 19 22:22:27 PDT 2013; root:xnu-2422.1.72~6/RELEASE_X86_64 x86_64.
%%Title: /private/tmp/tp6588edc8_2804_42b1_bd69_cf7f17f80fbf.eps
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 441 394
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.02 0
%%Copyright: Copyright 1996-2007 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font IMUBPF+Helvetica
%!FontType1-1.0: IMUBPF+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development; Cyrillic glyphs added by Valek Filippov (C) 2001-2002) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /IMUBPF+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 53 /five put
dup 55 /seven put
dup 57 /nine put
dup 67 /C put
dup 72 /H put
dup 79 /O put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD35265922886A18E9B8
260359CC22A34B07B7820B5EB2056F38A5B89E61B9F1A2C8BFB909F826665D9E
6DE2FC917C0D89DF9C79753975A0E3FC97A7BE29FD0A4CF998E787D83E90EF4E
5F3FC2B68AA05466FF3F7174EE9257AC540D70BA0CB4E2EAE1694834494990AC
2E0F533267E1D8CED0284A08D810ABB095A54C99FFBB30602EBDF23E1029E1AA
108C3E9969757B0D35DE83AD81FDC4B82248CEFDA17CE15C0D6CAA0C73C95DBD
7DCD06431F6DE42F171A068E65125A8B9556040345A9BF6D55F8C4226132268F
46C6F2125094CF41D8BE4DEB117AFD9AD130561BE9278B092FE1C8D2A6C206C0
402736454DA60A198060A7ADB3000CB9D91A8ACA6F1BBAD702ED05B47ABB0B1C
12FEA7CE0B3F1DFF80B1B083B22B79CB736E499AEC46662CF93F4DB5CF08C2BA
9DCFD4D7F5FEB02323081A1D4CA78A3AA0A1EDD130C1A1D94F2CD1634BADBBF0
3E462D100B8B9F97B7B1153F09FD2E14AE4891C6DA6C8EEF311F960B018E27E3
9E3DD1B2EB39CC20B5812551FF7C643D5C96411E8A54DAD7A96A28C8E978888D
AFA29F4FA9893772469DA6612F337B6F892329BA4517342876D3E5596A86E8AE
FAD95E187DB6F351AC33A337DC6958A1E798057E358D77369D57594F299C8952
807C4F2C7B8CF38CCD8EDB64598AF7888293F2D3C3613FD0CBAA3607513F9C55
B3A26F60E6969C1A670D020945F6B8EA4E146144FE8EB643EC7C2626686E13AC
90C3724ECC5C6F01E842CD73EF707955DCDA36D8EF9AD10532B1DA35A8375593
CFEA9107E88D5810297312534D2DFB57A201202A146D1B9053EE0232AC751EA2
8E947DD01D36E0A4B63AAB91A90005AD51E2F8372ADE2E97CAD68AEFED24C9D1
4828D184E4999CAE5043582C5AB1AF1374FE1944C4010B447983607AF5F49CD3
7CDDD01B67A2CA2CBAD78F4204B70B2A4713326A725958DFAF73356DD329D90A
9027EFEF0B5D335292C76CE65F17685D4AAA9909FC1B8CFD44D4AD4B16AAFC60
9D7989F4CA7176F7261093B1705B0DC7B5D4375D92B8157E6AECFA17C68F0C52
CCDE961FB4771E0FFC4D62FD281475FB766AAD5E7F0F988CD068A81E2C05218B
CC489377889A658E41BD2850D8671878F35A2E387C6E48A63984D16BE71312F2
0F0A3A0EAABCB3EC38822082FAC622AA21944CA75C2CEB86F31781D326EE7215
1B396F981F5431F421779B0B6E09C7636A4D0E21504D4ABB367D3359B64B989B
FE19FACB8E2719EFFE93F81723BD1CFE4B3CD1D7816FF9A49C3CBBC681A2F8CC
B2B351A295FBCF4ABFA398A401D3557B0AC295EE0D72DF3CB1AB63FB1BD29AF3
22EBF377E95F5FC624F64BF7C9AC0B2BE08D579383F1210953A42F6626EF905D
DB7E214D2812C3339F76D75D863F48D42D0BC3DFF2EAEC98EECCC038F7DFD5A8
CB94B80DEFDCDE30BAFD0B93F8539D917948F76871F29E92519C00B461AD4253
A7B3590E4CA230ED67533B13C5FB56883D11A691B143393682F2F214E443C135
3B1753ACD8F90C2D8759DD667BEAC94FAF3226BA90E67084570B6F13FE529557
A0C096F54B7A9E0EF43FC82AAEA6C0737833F36B2CA486E63EB226689D6F562C
DECB9BFABF0E02FD442487909580065734432E5842FCF458BC7BC24BF2D5437E
27211C572BCAB87B03364F02FE69CFE472ED68885F80CCA34DE81AB8476DB66E
4F467F56906815DF377996A4C5D1AD530761D477F64DE9E36BDDD1BBCF1D30A6
C135DCAB44F07D6FAA3AE84DEF5FAB1FDBC4836261D5272CA0092A9969171FF4
D17789DFB4AA576D5EB0D7083632C708EE96F36A41936DF013E873323D065D3A
B79791F1D91098D21831C7E8851AA33AFD5C910739EEC2F6A03DB4DE3A7D46D8
78FCB878759DBD2F061A096503579655C3A392C70237B1809247577E4CFDD02C
C989A6C1A497EB8AD29B5BAE16B60A7B1A1F00D4F4F6C40E5ACBDA1C81D0C0D5
DAAB7623DF61176FF4A4AB674EA8454E2EB29511C51BF1C551819C347B8D86C4
543EF53806B1AE5534D735F6C3F158CB28DF7409DD0B831A9E2705B39B62CE5E
87D8F5AD8021045D896FAC6F0B0D047350BC59C16EB137AB7FE1929DD53E0634
7EC2611C4B797CED2FDE9B8B3E570E2880FCDEC0D15645E98C9905B138405923
628762A1DD86D6D7EB30DD827EA35AC4431073E323372BD083CA2C62CA84E906
3BA6E854EE86F83E86A43A41440959278C71192953EE63CD2BC9812DA91A3D6B
E9A0B1054152A0FA676D0552784066105E9F8761B60E60B9E3D65C941CB946D4
E7DA669AD3C025E06B4404D3537298DEE3257D6D37E79322DFFC3CEA0110D4DF
5309B7ED4654295FD4E5E8F5B29B75C8B0F96D41E086DFE5323C603FE03EF172
60FFA959E5D09247B4C24C0BC15077B437E9F2BCC139AC3C7DAED0E096656708
9DCC31A219AF868DCD71D12FD8CC356C3DAAAEF4666EA3D3ADDA7F585DB7410A
F047EBFDD5511C3C3149AD43ACE1886DFA01FE67348B90C5BA627386EE0B33A3
75B3376290A3A73D62414281F5A6D4A7CFDF723F5BA6FE4185341260F5923CE4
39DC404081D4E4A5A3BD45EC2E3CF5BE081863062CCE5E1BEADD6F2BCC1B2D08
E75BF5C7260EE8DF173E9D3D2228B9E39C9E732A5ABFCC8617287332ACC621BB
A0462933241B6AACD8F31981D4149103180634748BD0DB10DEE0E2CB2E607028
73B79452A3C1B58D9FD8AFC37C8CC30C113DD9FE79A0847E76A0EA1ACBDC6D55
E267FAA256C21D52D73711132BED7F9A95E22B2CE8B44C48CA4B7E4E0CBB73FA
F23669AD4CAD477F961C135227321AF4D761543F766B5DC6406DB406E39066BC
4B72B83B2D58FBC35535339821DAAE3327BFA1162C1C72B2DBC20790AA6C5402
14A1E107913A569FC2C5B75993CB0DCE700472332D754C141755F8D102CBC73C
75C1AAB90503A415B698264D9A469806D0986859F93820E00EA2708F7E19265E
56FCAB08E12870B16385D7BCB57E265A08D0BEBC833F214F2D70CFE58886253B
C64497C474B9FCDD4DC8D4535713A4FAAD21C072E88CC26E24242CB6679621DE
4B3B2EA8C2F86FE83F0CAF20A02D37BC78AC504794304A831ACA4874B21670BB
44B955A7A74F3FFB14DDF4D0E239D1C5F3C136D1EE3D88DD2B72D3D0F047B8E7
3C979DA2B91364A804365C6FD041C7EA1038D2E74CCB81D03436A68E71D00193
25F9001E9A5E401B9E1AD4D1648F3A0D9CB61681C3E5B14A4472D780A04D28E0
D95DB13CA402E062784C456297320DE7FD01B71E5363B821E527F13C44BFCBE2
3BF56EE18DB70BCE40C59C1895BFB96152B04A3CCE03CAAB0BA5C606C5C71F87
D907073E044E6806892D76975665301196E4E20EA016E040425C3A1C8E2C8678
5FED7310E67424ED3240466510454C21EA79E22168DBE55115EDA22DE3352FD9
88B692835C28A3E27DDFC00D79E7A3F99928BE006490CAC82107DC83303D476E
7F22FE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /IMUBPF+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 441 394 re
W
q
q
[0.1 0 0 0.1 0 0] cm
q
7.5 5.832 4402.5 3934.17 re
W
/DeviceGray {} cs
[1] sc
36.668 207.5 4333.33 3418.33 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
36.668 207.5 4333.332 3418.33 re
S
/DeviceGray {} CS
[0] SC
36.668 207.5 m
4370 207.5 l
S
36.668 3625.83 m
4370 3625.83 l
S
36.668 207.5 m
36.668 3625.83 l
S
4370 207.5 m
4370 3625.83 l
S
36.668 207.5 m
4370 207.5 l
S
36.668 207.5 m
36.668 3625.83 l
S
470 207.5 m
470 250.832 l
S
470 3625.83 m
470 3582.5 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 38.6668 4] Tm
0 0 Td
/F8_0 15 Tf
(10) 16.68 Tj
Q
903.332 207.5 m
903.332 250.832 l
S
903.332 3625.83 m
903.332 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 82 4] Tm
0 0 Td
/F8_0 15 Tf
(30) 16.68 Tj
Q
1336.67 207.5 m
1336.67 250.832 l
S
1336.67 3625.83 m
1336.67 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 125.333 4] Tm
0 0 Td
/F8_0 15 Tf
(50) 16.68 Tj
Q
1770 207.5 m
1770 250.832 l
S
1770 3625.83 m
1770 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 168.667 4] Tm
0 0 Td
/F8_0 15 Tf
(70) 16.68 Tj
Q
2203.33 207.5 m
2203.33 250.832 l
S
2203.33 3625.83 m
2203.33 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 212 4] Tm
0 0 Td
/F8_0 15 Tf
(90) 16.68 Tj
Q
2636.67 207.5 m
2636.67 250.832 l
S
2636.67 3625.83 m
2636.67 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 251.167 4] Tm
0 0 Td
/F8_0 15 Tf
(110) 25.02 Tj
Q
3070 207.5 m
3070 250.832 l
S
3070 3625.83 m
3070 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 294.5 4] Tm
0 0 Td
/F8_0 15 Tf
(130) 25.02 Tj
Q
3503.33 207.5 m
3503.33 250.832 l
S
3503.33 3625.83 m
3503.33 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 337.833 4] Tm
0 0 Td
/F8_0 15 Tf
(150) 25.02 Tj
Q
3936.67 207.5 m
3936.67 250.832 l
S
3936.67 3625.83 m
3936.67 3582.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 381.167 4] Tm
0 0 Td
/F8_0 15 Tf
(170) 25.02 Tj
Q
36.668 207.5 m
80 207.5 l
S
4370 207.5 m
4326.67 207.5 l
S
36.668 550 m
80 550 l
S
4370 550 m
4326.67 550 l
S
36.668 891.668 m
80 891.668 l
S
4370 891.668 m
4326.67 891.668 l
S
36.668 1233.33 m
80 1233.33 l
S
4370 1233.33 m
4326.67 1233.33 l
S
36.668 1575 m
80 1575 l
S
4370 1575 m
4326.67 1575 l
S
36.668 1916.67 m
80 1916.67 l
S
4370 1916.67 m
4326.67 1916.67 l
S
36.668 2259.17 m
80 2259.17 l
S
4370 2259.17 m
4326.67 2259.17 l
S
36.668 2600.83 m
80 2600.83 l
S
4370 2600.83 m
4326.67 2600.83 l
S
36.668 2942.5 m
80 2942.5 l
S
4370 2942.5 m
4326.67 2942.5 l
S
36.668 3284.17 m
80 3284.17 l
S
4370 3284.17 m
4326.67 3284.17 l
S
36.668 3625.83 m
80 3625.83 l
S
4370 3625.83 m
4326.67 3625.83 l
S
36.668 207.5 m
4370 207.5 l
S
36.668 3625.83 m
4370 3625.83 l
S
36.668 207.5 m
36.668 3625.83 l
S
4370 207.5 m
4370 3625.83 l
S
Q
q
36.668 206.668 4334.162 3419.162 re
W
/DeviceRGB {} cs
[0 0 0.5625] sc
296.668 207.5 346.664 1694.17 re
f*
5 w
1 j
/DeviceGray {} CS
[0] SC
296.668 207.5 346.664 1694.17 re
S
730 207.5 346.668 3280.83 re
f*
730 207.5 346.67 3280.83 re
S
1163.33 207.5 346.668 2964.17 re
f*
1163.33 207.5 346.67 2964.17 re
S
1596.67 207.5 346.664 2875.83 re
f*
1596.67 207.5 346.66 2875.83 re
S
2030 207.5 346.668 1655 re
f*
2030 207.5 346.67 1655 re
S
2463.33 207.5 346.668 2357.5 re
f*
2463.33 207.5 346.67 2357.5 re
S
2896.67 207.5 346.664 2081.67 re
f*
2896.67 207.5 346.66 2081.67 re
S
3330 207.5 346.668 1469.17 re
f*
3330 207.5 346.67 1469.17 re
S
3763.33 207.5 346.668 1128.33 re
f*
3763.33 207.5 346.67 1128.33 re
S
36.668 207.5 m
4370 207.5 l
S
Q
q
7 5 4403 3935 re
W
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 109.417 374.417] Tm
0 0 Td
/F8_0 15 Tf
(Histogram of Orientation of a Cell) 221.745 Tj
Q
Q
/DeviceGray {} cs
[0] sc
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font IMUBPF+Helvetica
%%EOF
